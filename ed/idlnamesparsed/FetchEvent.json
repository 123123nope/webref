{
  "name": "FetchEvent",
  "type": "interface",
  "defined": {
    "spec": {
      "title": "Service Workers Nightly",
      "url": "https://www.w3.org/TR/service-workers-1/"
    },
    "fragment": "[Exposed=ServiceWorker]\ninterface FetchEvent : ExtendableEvent {\n  constructor(DOMString type, FetchEventInit eventInitDict);\n  [SameObject] readonly attribute Request request;\n  readonly attribute Promise<any> preloadResponse;\n  readonly attribute DOMString clientId;\n  readonly attribute DOMString resultingClientId;\n  readonly attribute DOMString replacesClientId;\n  readonly attribute Promise<undefined> handled;\n\n  undefined respondWith(Promise<Response> r);\n};",
    "href": "https://w3c.github.io/ServiceWorker/#fetchevent"
  },
  "extended": [],
  "inheritance": {
    "name": "ExtendableEvent",
    "type": "interface",
    "defined": {
      "spec": {
        "title": "Service Workers Nightly",
        "url": "https://www.w3.org/TR/service-workers-1/"
      },
      "fragment": "[Exposed=ServiceWorker]\ninterface ExtendableEvent : Event {\n  constructor(DOMString type, optional ExtendableEventInit eventInitDict = {});\n  undefined waitUntil(Promise<any> f);\n};",
      "href": "https://w3c.github.io/ServiceWorker/#extendableevent"
    },
    "extended": [],
    "includes": []
  },
  "includes": []
}