{
  "name": "SVGAnimateTransformElement",
  "type": "interface",
  "defined": {
    "spec": {
      "title": "SVG Animations",
      "url": "https://svgwg.org/specs/animations/"
    },
    "fragment": "[Exposed=Window]\ninterface SVGAnimateTransformElement : SVGAnimationElement {\n};"
  },
  "extended": [],
  "inheritance": {
    "name": "SVGAnimationElement",
    "type": "interface",
    "defined": {
      "spec": {
        "title": "SVG Animations",
        "url": "https://svgwg.org/specs/animations/"
      },
      "fragment": "[Exposed=Window]\ninterface SVGAnimationElement : SVGElement {\n\n  readonly attribute SVGElement? targetElement;\n\n  attribute EventHandler onbegin;\n  attribute EventHandler onend;\n  attribute EventHandler onrepeat;\n\n  float getStartTime();\n  float getCurrentTime();\n  float getSimpleDuration();\n\n  undefined beginElement();\n  undefined beginElementAt(float offset);\n  undefined endElement();\n  undefined endElementAt(float offset);\n};"
    },
    "extended": [
      {
        "spec": {
          "title": "SVG Animations",
          "url": "https://svgwg.org/specs/animations/"
        },
        "fragment": "SVGAnimationElement includes SVGTests;"
      }
    ],
    "inheritance": {
      "name": "SVGElement",
      "type": "interface",
      "defined": {
        "spec": {
          "title": "Scalable Vector Graphics (SVG) 2",
          "url": "https://www.w3.org/TR/SVG2/"
        },
        "fragment": "[Exposed=Window]\ninterface SVGElement : Element {\n\n  [SameObject] readonly attribute SVGAnimatedString className;\n\n  readonly attribute SVGSVGElement? ownerSVGElement;\n  readonly attribute SVGElement? viewportElement;\n};",
        "href": "https://svgwg.org/svg2-draft/types.html#InterfaceSVGElement"
      },
      "extended": [
        {
          "spec": {
            "title": "CSS Object Model (CSSOM)",
            "url": "https://www.w3.org/TR/cssom-1/"
          },
          "fragment": "SVGElement includes ElementCSSInlineStyle;"
        },
        {
          "spec": {
            "title": "Scalable Vector Graphics (SVG) 2",
            "url": "https://www.w3.org/TR/SVG2/"
          },
          "fragment": "SVGElement includes GlobalEventHandlers;"
        },
        {
          "spec": {
            "title": "Scalable Vector Graphics (SVG) 2",
            "url": "https://www.w3.org/TR/SVG2/"
          },
          "fragment": "SVGElement includes DocumentAndElementEventHandlers;"
        },
        {
          "spec": {
            "title": "Scalable Vector Graphics (SVG) 2",
            "url": "https://www.w3.org/TR/SVG2/"
          },
          "fragment": "SVGElement includes SVGElementInstance;"
        },
        {
          "spec": {
            "title": "Scalable Vector Graphics (SVG) 2",
            "url": "https://www.w3.org/TR/SVG2/"
          },
          "fragment": "SVGElement includes HTMLOrSVGElement;"
        }
      ],
      "inheritance": {
        "extended": [
          {
            "spec": {
              "title": "Fullscreen API Standard",
              "url": "https://fullscreen.spec.whatwg.org/"
            },
            "fragment": "partial interface Element {\n  Promise<undefined> requestFullscreen(optional FullscreenOptions options = {});\n\n  attribute EventHandler onfullscreenchange;\n  attribute EventHandler onfullscreenerror;\n};"
          },
          {
            "spec": {
              "title": "Element Timing API",
              "url": "https://wicg.github.io/element-timing/"
            },
            "fragment": "partial interface Element {\n    [CEReactions] attribute DOMString elementTiming;\n};"
          },
          {
            "spec": {
              "title": "HTML Sanitizer API",
              "url": "https://wicg.github.io/sanitizer-api/"
            },
            "fragment": "partial interface Element {\n  undefined setHTML(DOMString input, optional SetHTMLOptions options = {});\n};"
          },
          {
            "spec": {
              "title": "CSS Spatial Navigation Level 1",
              "url": "https://www.w3.org/TR/css-nav-1/"
            },
            "fragment": "partial interface Element {\n    Node getSpatialNavigationContainer();\n    sequence<Node> focusableAreas(optional FocusableAreasOption option = {});\n    Node? spatialNavigationSearch(SpatialNavigationDirection dir, optional SpatialNavigationSearchOptions options = {});\n};"
          },
          {
            "spec": {
              "title": "CSS Pseudo-Elements Module Level 4",
              "url": "https://www.w3.org/TR/css-pseudo-4/"
            },
            "fragment": "partial interface Element {\n  CSSPseudoElement? pseudo(CSSOMString type);\n};"
          },
          {
            "spec": {
              "title": "CSS Regions Module Level 1",
              "url": "https://www.w3.org/TR/css-regions-1/"
            },
            "fragment": "Element includes Region;"
          },
          {
            "spec": {
              "title": "CSS Shadow Parts",
              "url": "https://www.w3.org/TR/css-shadow-parts-1/"
            },
            "fragment": "partial interface Element {\n  [SameObject, PutForwards=value] readonly attribute DOMTokenList part;\n};"
          },
          {
            "spec": {
              "title": "CSS Typed OM Level 1",
              "url": "https://www.w3.org/TR/css-typed-om-1/"
            },
            "fragment": "partial interface Element {\n    [SameObject] StylePropertyMapReadOnly computedStyleMap();\n};"
          },
          {
            "spec": {
              "title": "CSSOM View Module",
              "url": "https://www.w3.org/TR/cssom-view-1/"
            },
            "fragment": "partial interface Element {\n  DOMRectList getClientRects();\n  [NewObject] DOMRect getBoundingClientRect();\n  undefined scrollIntoView(optional (boolean or ScrollIntoViewOptions) arg = {});\n  undefined scroll(optional ScrollToOptions options = {});\n  undefined scroll(unrestricted double x, unrestricted double y);\n  undefined scrollTo(optional ScrollToOptions options = {});\n  undefined scrollTo(unrestricted double x, unrestricted double y);\n  undefined scrollBy(optional ScrollToOptions options = {});\n  undefined scrollBy(unrestricted double x, unrestricted double y);\n  attribute unrestricted double scrollTop;\n  attribute unrestricted double scrollLeft;\n  readonly attribute long scrollWidth;\n  readonly attribute long scrollHeight;\n  readonly attribute long clientTop;\n  readonly attribute long clientLeft;\n  readonly attribute long clientWidth;\n  readonly attribute long clientHeight;\n};"
          },
          {
            "spec": {
              "title": "CSSOM View Module",
              "url": "https://www.w3.org/TR/cssom-view-1/"
            },
            "fragment": "// like Range\nElement includes GeometryUtils;"
          },
          {
            "spec": {
              "title": "DOM Parsing and Serialization",
              "url": "https://www.w3.org/TR/DOM-Parsing/"
            },
            "fragment": "Element includes InnerHTML;"
          },
          {
            "spec": {
              "title": "DOM Parsing and Serialization",
              "url": "https://www.w3.org/TR/DOM-Parsing/"
            },
            "fragment": "partial interface Element {\n  [CEReactions] attribute [LegacyNullToEmptyString] DOMString outerHTML;\n  [CEReactions] undefined insertAdjacentHTML(DOMString position, DOMString text);\n};"
          },
          {
            "spec": {
              "title": "EditContext API",
              "url": "https://www.w3.org/TR/edit-context/"
            },
            "fragment": "partial interface Element {\n     attribute EditContext? editContext;\n};"
          },
          {
            "spec": {
              "title": "Pointer Events",
              "url": "https://www.w3.org/TR/pointerevents3/"
            },
            "fragment": "partial interface Element {\n  undefined setPointerCapture (long pointerId);\n  undefined releasePointerCapture (long pointerId);\n  boolean hasPointerCapture (long pointerId);\n};"
          },
          {
            "spec": {
              "title": "Pointer Lock 2.0",
              "url": "https://www.w3.org/TR/pointerlock-2/"
            },
            "fragment": "partial interface Element {\n  undefined requestPointerLock();\n};"
          },
          {
            "spec": {
              "title": "Accessible Rich Internet Applications (WAI-ARIA) 1.3",
              "url": "https://www.w3.org/TR/wai-aria-1.2/"
            },
            "fragment": "Element includes ARIAMixin;"
          },
          {
            "spec": {
              "title": "Web Animations",
              "url": "https://www.w3.org/TR/web-animations-1/"
            },
            "fragment": "Element includes Animatable;"
          }
        ],
        "includes": [
          {
            "name": "Region",
            "type": "interface mixin",
            "defined": {
              "spec": {
                "title": "CSS Regions Module Level 1",
                "url": "https://www.w3.org/TR/css-regions-1/"
              },
              "fragment": "interface mixin Region {\n  readonly attribute CSSOMString regionOverset;\n  sequence<Range>? getRegionFlowRanges();\n};",
              "href": "https://drafts.csswg.org/css-regions/#region"
            },
            "extended": [],
            "inheritance": null,
            "includes": []
          },
          {
            "name": "GeometryUtils",
            "type": "interface mixin",
            "defined": {
              "spec": {
                "title": "CSSOM View Module",
                "url": "https://www.w3.org/TR/cssom-view-1/"
              },
              "fragment": "interface mixin GeometryUtils {\n  sequence<DOMQuad> getBoxQuads(optional BoxQuadOptions options = {});\n  DOMQuad convertQuadFromNode(DOMQuadInit quad, GeometryNode from, optional ConvertCoordinateOptions options = {});\n  DOMQuad convertRectFromNode(DOMRectReadOnly rect, GeometryNode from, optional ConvertCoordinateOptions options = {});\n  DOMPoint convertPointFromNode(DOMPointInit point, GeometryNode from, optional ConvertCoordinateOptions options = {}); // XXX z,w turns into 0\n};",
              "href": "https://drafts.csswg.org/cssom-view/#geometryutils"
            },
            "extended": [],
            "inheritance": null,
            "includes": []
          },
          {
            "name": "InnerHTML",
            "type": "interface mixin",
            "defined": {
              "spec": {
                "title": "DOM Parsing and Serialization",
                "url": "https://www.w3.org/TR/DOM-Parsing/"
              },
              "fragment": "interface mixin InnerHTML {\n  [CEReactions] attribute [LegacyNullToEmptyString] DOMString innerHTML;\n};",
              "href": "https://w3c.github.io/DOM-Parsing/#dom-innerhtml"
            },
            "extended": [],
            "inheritance": null,
            "includes": []
          },
          {
            "name": "ARIAMixin",
            "type": "interface mixin",
            "defined": {
              "spec": {
                "title": "Accessible Rich Internet Applications (WAI-ARIA) 1.3",
                "url": "https://www.w3.org/TR/wai-aria-1.2/"
              },
              "fragment": "interface mixin ARIAMixin {\n  attribute DOMString? role;\n\n  attribute DOMString? ariaAtomic;\n  attribute DOMString? ariaAutoComplete;\n  attribute DOMString? ariaBusy;\n  attribute DOMString? ariaChecked;\n  attribute DOMString? ariaColCount;\n  attribute DOMString? ariaColIndex;\n  attribute DOMString? ariaColIndexText;\n  attribute DOMString? ariaColSpan;\n\n  attribute DOMString? ariaCurrent;\n\n  attribute DOMString? ariaDescription;\n\n  attribute DOMString? ariaDisabled;\n\n  attribute DOMString? ariaExpanded;\n\n  attribute DOMString? ariaHasPopup;\n  attribute DOMString? ariaHidden;\n  attribute DOMString? ariaInvalid;\n  attribute DOMString? ariaKeyShortcuts;\n  attribute DOMString? ariaLabel;\n\n  attribute DOMString? ariaLevel;\n  attribute DOMString? ariaLive;\n  attribute DOMString? ariaModal;\n  attribute DOMString? ariaMultiLine;\n  attribute DOMString? ariaMultiSelectable;\n  attribute DOMString? ariaOrientation;\n\n  attribute DOMString? ariaPlaceholder;\n  attribute DOMString? ariaPosInSet;\n  attribute DOMString? ariaPressed;\n  attribute DOMString? ariaReadOnly;\n\n  attribute DOMString? ariaRequired;\n  attribute DOMString? ariaRoleDescription;\n  attribute DOMString? ariaRowCount;\n  attribute DOMString? ariaRowIndex;\n  attribute DOMString? ariaRowIndexText;\n  attribute DOMString? ariaRowSpan;\n  attribute DOMString? ariaSelected;\n  attribute DOMString? ariaSetSize;\n  attribute DOMString? ariaSort;\n  attribute DOMString? ariaValueMax;\n  attribute DOMString? ariaValueMin;\n  attribute DOMString? ariaValueNow;\n  attribute DOMString? ariaValueText;\n};",
              "href": "https://w3c.github.io/aria/#dom-ariamixin"
            },
            "extended": [],
            "inheritance": null,
            "includes": []
          },
          {
            "name": "Animatable",
            "type": "interface mixin",
            "defined": {
              "spec": {
                "title": "Web Animations",
                "url": "https://www.w3.org/TR/web-animations-1/"
              },
              "fragment": "interface mixin Animatable {\n    Animation           animate(object? keyframes,\n                                optional (unrestricted double or KeyframeAnimationOptions) options = {});\n    sequence<Animation> getAnimations(optional GetAnimationsOptions options = {});\n};",
              "href": "https://drafts.csswg.org/web-animations-1/#animatable"
            },
            "extended": [],
            "inheritance": null,
            "includes": []
          }
        ]
      },
      "includes": [
        {
          "name": "ElementCSSInlineStyle",
          "type": "interface mixin",
          "defined": {
            "spec": {
              "title": "CSS Object Model (CSSOM)",
              "url": "https://www.w3.org/TR/cssom-1/"
            },
            "fragment": "interface mixin ElementCSSInlineStyle {\n  [SameObject, PutForwards=cssText] readonly attribute CSSStyleDeclaration style;\n};",
            "href": "https://drafts.csswg.org/cssom/#elementcssinlinestyle"
          },
          "extended": [
            {
              "spec": {
                "title": "CSS Typed OM Level 1",
                "url": "https://www.w3.org/TR/css-typed-om-1/"
              },
              "fragment": "partial interface mixin ElementCSSInlineStyle {\n    [SameObject] readonly attribute StylePropertyMap attributeStyleMap;\n};"
            }
          ],
          "inheritance": null,
          "includes": []
        },
        {
          "extended": [
            {
              "spec": {
                "title": "CSS Animations Level 1",
                "url": "https://www.w3.org/TR/css-animations-1/"
              },
              "fragment": "partial interface mixin GlobalEventHandlers {\n  attribute EventHandler onanimationstart;\n  attribute EventHandler onanimationiteration;\n  attribute EventHandler onanimationend;\n  attribute EventHandler onanimationcancel;\n};"
            },
            {
              "spec": {
                "title": "CSS Transitions",
                "url": "https://www.w3.org/TR/css-transitions-1/"
              },
              "fragment": "partial interface mixin GlobalEventHandlers {\n  attribute EventHandler ontransitionrun;\n  attribute EventHandler ontransitionstart;\n  attribute EventHandler ontransitionend;\n  attribute EventHandler ontransitioncancel;\n};"
            },
            {
              "spec": {
                "title": "Pointer Events",
                "url": "https://www.w3.org/TR/pointerevents3/"
              },
              "fragment": "partial interface mixin GlobalEventHandlers {\n    attribute EventHandler ongotpointercapture;\n    attribute EventHandler onlostpointercapture;\n    attribute EventHandler onpointerdown;\n    attribute EventHandler onpointermove;\n    [SecureContext] attribute EventHandler onpointerrawupdate;\n    attribute EventHandler onpointerup;\n    attribute EventHandler onpointercancel;\n    attribute EventHandler onpointerover;\n    attribute EventHandler onpointerout;\n    attribute EventHandler onpointerenter;\n    attribute EventHandler onpointerleave;\n};"
            },
            {
              "spec": {
                "title": "Selection API",
                "url": "https://www.w3.org/TR/selection-api/"
              },
              "fragment": "partial interface mixin GlobalEventHandlers {\n  attribute EventHandler onselectstart;\n  attribute EventHandler onselectionchange;\n};"
            },
            {
              "spec": {
                "title": "Touch Events - Level 2",
                "url": "https://www.w3.org/TR/touch-events/"
              },
              "fragment": "partial interface mixin GlobalEventHandlers {\n                    attribute EventHandler ontouchstart;\n                    attribute EventHandler ontouchend;\n                    attribute EventHandler ontouchmove;\n                    attribute EventHandler ontouchcancel;\n};"
            },
            {
              "spec": {
                "title": "WebXR DOM Overlays Module",
                "url": "https://www.w3.org/TR/webxr-dom-overlays-1/"
              },
              "fragment": "partial interface mixin GlobalEventHandlers {\n  attribute EventHandler onbeforexrselect;\n};"
            }
          ],
          "includes": []
        },
        {
          "name": "SVGElementInstance",
          "type": "interface mixin",
          "defined": {
            "spec": {
              "title": "Scalable Vector Graphics (SVG) 2",
              "url": "https://www.w3.org/TR/SVG2/"
            },
            "fragment": "interface mixin SVGElementInstance {\n  [SameObject] readonly attribute SVGElement? correspondingElement;\n  [SameObject] readonly attribute SVGUseElement? correspondingUseElement;\n};",
            "href": "https://svgwg.org/svg2-draft/struct.html#InterfaceSVGElementInstance"
          },
          "extended": [],
          "inheritance": null,
          "includes": []
        }
      ]
    },
    "includes": [
      {
        "name": "SVGTests",
        "type": "interface mixin",
        "defined": {
          "spec": {
            "title": "Scalable Vector Graphics (SVG) 2",
            "url": "https://www.w3.org/TR/SVG2/"
          },
          "fragment": "interface mixin SVGTests {\n  [SameObject] readonly attribute SVGStringList requiredExtensions;\n  [SameObject] readonly attribute SVGStringList systemLanguage;\n};",
          "href": "https://svgwg.org/svg2-draft/types.html#InterfaceSVGTests"
        },
        "extended": [],
        "inheritance": null,
        "includes": []
      }
    ]
  },
  "includes": []
}