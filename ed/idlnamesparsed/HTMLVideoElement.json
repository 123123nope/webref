{
  "extended": [
    {
      "spec": {
        "title": "Media Playback Quality",
        "url": "https://w3c.github.io/media-playback-quality/"
      },
      "fragment": "partial interface HTMLVideoElement {\n  VideoPlaybackQuality getVideoPlaybackQuality();\n};"
    },
    {
      "spec": {
        "title": "HTMLVideoElement.requestVideoFrameCallback()",
        "url": "https://wicg.github.io/video-rvfc/"
      },
      "fragment": "partial interface HTMLVideoElement {\n    unsigned long requestVideoFrameCallback(VideoFrameRequestCallback callback);\n    undefined cancelVideoFrameCallback(unsigned long handle);\n};"
    },
    {
      "spec": {
        "title": "Picture-in-Picture",
        "url": "https://www.w3.org/TR/picture-in-picture/"
      },
      "fragment": "partial interface HTMLVideoElement {\n  [NewObject] Promise<PictureInPictureWindow> requestPictureInPicture();\n\n  attribute EventHandler onenterpictureinpicture;\n  attribute EventHandler onleavepictureinpicture;\n\n  [CEReactions] attribute boolean autoPictureInPicture;\n  [CEReactions] attribute boolean disablePictureInPicture;\n};"
    }
  ],
  "includes": []
}