{
  "spec": {
    "title": "CSS 2",
    "url": "https://drafts.csswg.org/css2/"
  },
  "properties": {
    "z-index": {
      "name": "z-index",
      "value": "auto | <integer> | inherit",
      "initial": "auto",
      "appliesTo": "positioned elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "media": "visual",
      "styleDeclaration": [
        "z-index",
        "zIndex"
      ]
    },
    "page-break-before": {
      "name": "page-break-before",
      "value": "auto | always | avoid | left | right | inherit",
      "initial": "auto",
      "appliesTo": "block-level elements (but see text)",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "media": "visual, paged",
      "styleDeclaration": [
        "page-break-before",
        "pageBreakBefore"
      ]
    },
    "page-break-after": {
      "name": "page-break-after",
      "value": "auto | always | avoid | left | right | inherit",
      "initial": "auto",
      "appliesTo": "block-level elements (but see text)",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "media": "visual, paged",
      "styleDeclaration": [
        "page-break-after",
        "pageBreakAfter"
      ]
    },
    "page-break-inside": {
      "name": "page-break-inside",
      "value": "avoid | auto | inherit",
      "initial": "auto",
      "appliesTo": "block-level elements (but see text)",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "media": "visual, paged",
      "styleDeclaration": [
        "page-break-inside",
        "pageBreakInside"
      ]
    }
  },
  "atrules": {},
  "valuespaces": {
    "<uri>": {
      "prose": "URI values (Uniform Resource Identifiers, see [RFC3986], which includes URLs, URNs, etc) in this specification are denoted by <uri>. The functional notation used to designate URIs in property values is \"url()\", as in:"
    },
    "<margin-width>": {
      "prose": "The properties defined in this section refer to the <margin-width> value type, which may take one of the following values:"
    },
    "<padding-width>": {
      "prose": "The properties defined in this section refer to the <padding-width> value type, which may take one of the following values:"
    },
    "<border-width>": {
      "prose": "The border width properties specify the width of the border area. The properties defined in this section refer to the <border-width> value type, which may take one of the following values:"
    },
    "<border-style>": {
      "prose": "The border style properties specify the line style of a box’s border (solid, double, dashed, etc.). The properties defined in this section refer to the <border-style> value type, which may take one of the following values:"
    },
    "<shape>": {
      "prose": "In CSS 2, the only valid <shape> value is: rect(<top>, <right>, <bottom>, <left>) where <top> and <bottom> specify offsets from the top border edge of the box, and <right>, and <left> specify offsets from the left border edge of the box. Authors should separate offset values with commas. User agents must support separation with commas, but may also support separation without commas (but not a combination), because a previous revision of this specification was ambiguous in this respect. <top>, <right>, <bottom>, and <left> may either have a <length> value or auto. Negative lengths are permitted. The value auto means that a given edge of the clipping region will be the same as the edge of the element’s generated border box (i.e., auto means the same as 0 for <top> and <left>, the same as the used value of the height plus the sum of vertical padding and border widths for <bottom>, and the same as the used value of the width plus the sum of the horizontal padding and border widths for <right>, such that four auto values result in the clipping region being the same as the element’s border box). When coordinates are rounded to pixel coordinates, care should be taken that no pixels remain visible when <left> and <right> have the same value (or <top> and <bottom> have the same value), and conversely that no pixels within the element’s border box remain hidden when these values are auto."
    }
  }
}
