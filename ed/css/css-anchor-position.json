{
  "spec": {
    "title": "CSS Anchor Positioning",
    "url": "https://drafts.csswg.org/css-anchor-position-1/"
  },
  "properties": [
    {
      "name": "anchor-name",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#propdef-anchor-name",
      "value": "none | <dashed-ident>#",
      "initial": "none",
      "appliesTo": "all elements that generate a principal box",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "values": [
        {
          "name": "none",
          "prose": "The property has no effect.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-name-none",
          "type": "value",
          "value": "none"
        },
        {
          "name": "<dashed-ident>#",
          "prose": "If the element generates a principal box, the element is an anchor element, with a list of anchor names as specified. Each anchor name is a tree-scoped name. Otherwise, the property has no effect.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-name-dashed-ident",
          "type": "value",
          "value": "<dashed-ident>#"
        }
      ],
      "styleDeclaration": [
        "anchor-name",
        "anchorName"
      ]
    },
    {
      "name": "anchor-default",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#propdef-anchor-default",
      "value": "<anchor-element>",
      "initial": "implicit",
      "appliesTo": "absolutely positioned elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "styleDeclaration": [
        "anchor-default",
        "anchorDefault"
      ]
    },
    {
      "name": "inset-area",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#propdef-inset-area",
      "value": "none | <inset-area>",
      "initial": "none",
      "appliesTo": "positioned elements with a default anchor element",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "TBD",
      "values": [
        {
          "name": "none",
          "prose": "The property has no effect.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-none",
          "type": "value",
          "value": "none"
        },
        {
          "name": "<inset-area>",
          "prose": "If the element does not have a default anchor element, or is not an absolutely-positioned element, this value has no effect. Otherwise, the property selects a region of the inset-area grid, and makes that the element’s containing block. Additionally, the normal value for the self-alignment properties behaves as either start, end, or anchor-center, depending on the positioning of the region, to give a good default alignment for the positioned element. See § 3.1.1 Resolving <inset-area>s for details on both of these effects. If the two <inset-area-span>s do not define a valid region, this property is invalid. Also, any auto inset properties resolve to 0.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-inset-area",
          "type": "value",
          "value": "<inset-area>"
        }
      ],
      "styleDeclaration": [
        "inset-area",
        "insetArea"
      ]
    },
    {
      "name": "justify-self",
      "newValues": "anchor-center",
      "values": [
        {
          "name": "anchor-center",
          "prose": "The new anchor-center value makes this case extremely simple: if the positioned element has a default anchor element, then it is aligned so as to center itself over the default anchor element in the relevant axis.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-justify-self-anchor-center",
          "type": "value",
          "value": "anchor-center"
        }
      ],
      "styleDeclaration": [
        "justify-self",
        "justifySelf"
      ]
    },
    {
      "name": "align-self",
      "newValues": "anchor-center",
      "values": [
        {
          "name": "anchor-center",
          "prose": "The new anchor-center value makes this case extremely simple: if the positioned element has a default anchor element, then it is aligned so as to center itself over the default anchor element in the relevant axis.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-justify-self-anchor-center",
          "type": "value",
          "value": "anchor-center"
        }
      ],
      "styleDeclaration": [
        "align-self",
        "alignSelf"
      ]
    },
    {
      "name": "justify-items",
      "newValues": "anchor-center",
      "values": [
        {
          "name": "anchor-center",
          "prose": "The new anchor-center value makes this case extremely simple: if the positioned element has a default anchor element, then it is aligned so as to center itself over the default anchor element in the relevant axis.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-justify-self-anchor-center",
          "type": "value",
          "value": "anchor-center"
        }
      ],
      "styleDeclaration": [
        "justify-items",
        "justifyItems"
      ]
    },
    {
      "name": "align-items",
      "newValues": "anchor-center",
      "values": [
        {
          "name": "anchor-center",
          "prose": "The new anchor-center value makes this case extremely simple: if the positioned element has a default anchor element, then it is aligned so as to center itself over the default anchor element in the relevant axis.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-justify-self-anchor-center",
          "type": "value",
          "value": "anchor-center"
        }
      ],
      "styleDeclaration": [
        "align-items",
        "alignItems"
      ]
    },
    {
      "name": "position-try-options",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#propdef-position-try-options",
      "value": "none | [ [<dashed-ident> || <try-tactic>] | inset-area( <'inset-area'> ) ]#",
      "initial": "none",
      "appliesTo": "absolutely-positioned elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "values": [
        {
          "name": "none",
          "prose": "The property has no effect; the element’s position options list is empty.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-position-try-options-none",
          "type": "value",
          "value": "none"
        },
        {
          "name": "<dashed-ident>",
          "prose": "If there is a @position-try rule with the given name, its associated position option is added to the position options list. Otherwise, this value has no effect.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-position-try-options-dashed-ident",
          "type": "value",
          "value": "<dashed-ident>"
        },
        {
          "name": "<try-tactic>",
          "value": "flip-block || flip-inline || flip-start",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-position-try-options-try-tactic",
          "type": "value"
        },
        {
          "name": "<try-tactic>",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-position-try-options-try-tactic",
          "type": "type",
          "value": "flip-block || flip-inline || flip-start"
        },
        {
          "name": "flip-block",
          "prose": "swaps the values in the block axis (between, for example, margin-block-start and margin-block-end), essentially mirroring across an inline-axis line.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-position-try-options-flip-block",
          "type": "value",
          "value": "flip-block"
        },
        {
          "name": "flip-inline",
          "prose": "swaps the values in the inline axis, essentially mirroring across a block-axis line.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-position-try-options-flip-inline",
          "type": "value",
          "value": "flip-inline"
        },
        {
          "name": "flip-start",
          "prose": "swaps the values of the start properties with each other, and the end properties with each other (between, for example, margin-block-start and margin-inline-start), essentially mirroring across a diagonal drawn from the start-start corner to the end-end corner.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-position-try-options-flip-start",
          "type": "value",
          "value": "flip-start"
        },
        {
          "name": "<dashed-ident> || <try-tactic>",
          "prose": "Combines the effects of the previous two options: if there is a @position-try rule with the given name, then applies its position option to the element’s base style, transforms it according to the specified <try-tactic>, and then adds the result to the element’s position options list. Otherwise, does nothing.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-position-try-options-dashed-ident--try-tactic",
          "type": "value",
          "value": "<dashed-ident> || <try-tactic>"
        },
        {
          "name": "inset-area()",
          "value": "inset-area()",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-position-try-options-inset-area-inset-area",
          "type": "value"
        }
      ],
      "styleDeclaration": [
        "position-try-options",
        "positionTryOptions"
      ]
    },
    {
      "name": "position-try-order",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#propdef-position-try-order",
      "value": "normal | <try-size>",
      "initial": "normal",
      "appliesTo": "absolutely positioned elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "values": [
        {
          "name": "normal",
          "prose": "Try the position options in the order specified by position-try-options.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-position-try-order-normal",
          "type": "value",
          "value": "normal"
        },
        {
          "name": "most-width",
          "prose": "For each entry in the position options list, apply a position option using that option to the element, and find the specified inset-modified containing block size that results from those styles. Stably sort the position options list according to this size, with the largest coming first.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-position-try-order-most-width",
          "type": "value",
          "value": "most-width"
        },
        {
          "name": "most-height",
          "prose": "For each entry in the position options list, apply a position option using that option to the element, and find the specified inset-modified containing block size that results from those styles. Stably sort the position options list according to this size, with the largest coming first.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-position-try-order-most-height",
          "type": "value",
          "value": "most-height"
        },
        {
          "name": "most-block-size",
          "prose": "For each entry in the position options list, apply a position option using that option to the element, and find the specified inset-modified containing block size that results from those styles. Stably sort the position options list according to this size, with the largest coming first.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-position-try-order-most-block-size",
          "type": "value",
          "value": "most-block-size"
        },
        {
          "name": "most-inline-size",
          "prose": "For each entry in the position options list, apply a position option using that option to the element, and find the specified inset-modified containing block size that results from those styles. Stably sort the position options list according to this size, with the largest coming first.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-position-try-order-most-inline-size",
          "type": "value",
          "value": "most-inline-size"
        }
      ],
      "styleDeclaration": [
        "position-try-order",
        "positionTryOrder"
      ]
    },
    {
      "name": "position-try",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#propdef-position-try",
      "value": "<'position-try-order'>? <'position-try-options'>",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "position-try",
        "positionTry"
      ]
    },
    {
      "name": "position-fallback-bounds",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#propdef-position-fallback-bounds",
      "value": "normal | <dashed-ident>",
      "initial": "normal",
      "appliesTo": "absolutely positioned elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "values": [
        {
          "name": "normal",
          "prose": "The element uses its normal (scroll-adjusted, inset-modified) containing block to determine if it’s overflowing for the purpose of selecting a position options list entry.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-position-fallback-bounds-normal",
          "type": "value",
          "value": "normal"
        }
      ],
      "styleDeclaration": [
        "position-fallback-bounds",
        "positionFallbackBounds"
      ]
    },
    {
      "name": "position-animation",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#propdef-position-animation",
      "value": "normal | magic",
      "initial": "normal",
      "appliesTo": "absolutely positioned elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "normal, or an overriding position rectangle (see prose)",
      "canonicalOrder": "per grammar",
      "animationType": "(see prose)",
      "values": [
        {
          "name": "normal",
          "prose": "This value has no effect.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-position-animation-normal",
          "type": "value",
          "value": "normal"
        },
        {
          "name": "magic",
          "prose": "At computed value time, resolves to a overriding position rectangle, using interleaving. At used value time, overrides the position and size of the element’s margin box, setting it to match the computed overriding position rectangle.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-position-animation-magic",
          "type": "value",
          "value": "magic"
        }
      ],
      "styleDeclaration": [
        "position-animation",
        "positionAnimation"
      ]
    }
  ],
  "atrules": [
    {
      "name": "@position-try",
      "prose": "The @position-try rule defines a position option with a given name, specifying one or more sets of positioning properties that will be applied to an element via position-try-options,",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#at-ruledef-position-try",
      "descriptors": [],
      "value": "@position-try <dashed-ident> { <declaration-list> }"
    }
  ],
  "selectors": [],
  "values": [
    {
      "name": "<inset-area>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-inset-area",
      "type": "type",
      "value": "[ [ left | center | right | center-left | center-right | x-start | x-end | center-x-start | center-x-end | x-self-start | x-self-end | center-x-self-start | center-x-self-end | all ] || [ top | center | bottom | center-top | center-bottom | y-start | y-end | center-y-start | center-y-end | y-self-start | y-self-end | center-y-self-start | center-y-self-end | all ] | [ block-start | center | block-end | center-block-start | center-block-end | self-block-start | self-block-end | center-self-block-start | center-self-block-end | all ] || [ inline-start | center | inline-end | center-inline-start | center-inline-end | self-inline-start | self-inline-end | center-self-inline-start | center-self-inline-end | all ] | [ start | center | end | center-start | center-end | all ]{1,2} | [ self-start | center | self-end | center-self-start | center-self-end | all ]{1,2} ]",
      "values": [
        {
          "name": "start",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-start",
          "type": "value",
          "value": "start"
        },
        {
          "name": "end",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-end",
          "type": "value",
          "value": "end"
        },
        {
          "name": "self-start",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-self-start",
          "type": "value",
          "value": "self-start"
        },
        {
          "name": "self-end",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-self-end",
          "type": "value",
          "value": "self-end"
        },
        {
          "name": "top",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-top",
          "type": "value",
          "value": "top"
        },
        {
          "name": "bottom",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-bottom",
          "type": "value",
          "value": "bottom"
        },
        {
          "name": "left",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-left",
          "type": "value",
          "value": "left"
        },
        {
          "name": "right",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-right",
          "type": "value",
          "value": "right"
        },
        {
          "name": "y-start",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-y-start",
          "type": "value",
          "value": "y-start"
        },
        {
          "name": "y-end",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-y-end",
          "type": "value",
          "value": "y-end"
        },
        {
          "name": "y-self-start",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-y-self-start",
          "type": "value",
          "value": "y-self-start"
        },
        {
          "name": "y-self-end",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-y-self-end",
          "type": "value",
          "value": "y-self-end"
        },
        {
          "name": "x-start",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-x-start",
          "type": "value",
          "value": "x-start"
        },
        {
          "name": "x-end",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-x-end",
          "type": "value",
          "value": "x-end"
        },
        {
          "name": "x-self-start",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-x-self-start",
          "type": "value",
          "value": "x-self-start"
        },
        {
          "name": "x-self-end",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-x-self-end",
          "type": "value",
          "value": "x-self-end"
        },
        {
          "name": "block-start",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-block-start",
          "type": "value",
          "value": "block-start"
        },
        {
          "name": "block-end",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-block-end",
          "type": "value",
          "value": "block-end"
        },
        {
          "name": "block-self-start",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-block-self-start",
          "type": "value",
          "value": "block-self-start"
        },
        {
          "name": "block-self-end",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-block-self-end",
          "type": "value",
          "value": "block-self-end"
        },
        {
          "name": "inline-start",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-inline-start",
          "type": "value",
          "value": "inline-start"
        },
        {
          "name": "inline-end",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-inline-end",
          "type": "value",
          "value": "inline-end"
        },
        {
          "name": "inline-self-start",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-inline-self-start",
          "type": "value",
          "value": "inline-self-start"
        },
        {
          "name": "inline-self-end",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-inline-self-end",
          "type": "value",
          "value": "inline-self-end"
        },
        {
          "name": "center",
          "prose": "The single corresponding row or column, depending on which axis this keyword is specifying. Like in anchor(), the plain logical keywords (start, end, etc) refer to the writing mode of the element’s containing block. The x-start/etc determine their direction in the same way, but in the specified physical axis. The \"self\" logical keywords (self-start, x-self-end, etc) are identical, but refer to the element’s own writing mode.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-center",
          "type": "value",
          "value": "center"
        },
        {
          "name": "center-start",
          "prose": "Two rows or columns, depending on which axis this keyword is specifying: the center row/column, and the row/column corresponding to the other half of the keyword as per the single-track keywords. (For example, center-top spans the first two rows—​the center row and the top row.)",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-center-start",
          "type": "value",
          "value": "center-start"
        },
        {
          "name": "center-end",
          "prose": "Two rows or columns, depending on which axis this keyword is specifying: the center row/column, and the row/column corresponding to the other half of the keyword as per the single-track keywords. (For example, center-top spans the first two rows—​the center row and the top row.)",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-center-end",
          "type": "value",
          "value": "center-end"
        },
        {
          "name": "center-top",
          "prose": "Two rows or columns, depending on which axis this keyword is specifying: the center row/column, and the row/column corresponding to the other half of the keyword as per the single-track keywords. (For example, center-top spans the first two rows—​the center row and the top row.)",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-center-top",
          "type": "value",
          "value": "center-top"
        },
        {
          "name": "center-bottom",
          "prose": "Two rows or columns, depending on which axis this keyword is specifying: the center row/column, and the row/column corresponding to the other half of the keyword as per the single-track keywords. (For example, center-top spans the first two rows—​the center row and the top row.)",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-center-bottom",
          "type": "value",
          "value": "center-bottom"
        },
        {
          "name": "center-y-start",
          "prose": "Two rows or columns, depending on which axis this keyword is specifying: the center row/column, and the row/column corresponding to the other half of the keyword as per the single-track keywords. (For example, center-top spans the first two rows—​the center row and the top row.)",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-center-y-start",
          "type": "value",
          "value": "center-y-start"
        },
        {
          "name": "center-y-end",
          "prose": "Two rows or columns, depending on which axis this keyword is specifying: the center row/column, and the row/column corresponding to the other half of the keyword as per the single-track keywords. (For example, center-top spans the first two rows—​the center row and the top row.)",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-center-y-end",
          "type": "value",
          "value": "center-y-end"
        },
        {
          "name": "center-x-start",
          "prose": "Two rows or columns, depending on which axis this keyword is specifying: the center row/column, and the row/column corresponding to the other half of the keyword as per the single-track keywords. (For example, center-top spans the first two rows—​the center row and the top row.)",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-center-x-start",
          "type": "value",
          "value": "center-x-start"
        },
        {
          "name": "center-x-end",
          "prose": "Two rows or columns, depending on which axis this keyword is specifying: the center row/column, and the row/column corresponding to the other half of the keyword as per the single-track keywords. (For example, center-top spans the first two rows—​the center row and the top row.)",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-center-x-end",
          "type": "value",
          "value": "center-x-end"
        },
        {
          "name": "center-block-start",
          "prose": "Two rows or columns, depending on which axis this keyword is specifying: the center row/column, and the row/column corresponding to the other half of the keyword as per the single-track keywords. (For example, center-top spans the first two rows—​the center row and the top row.)",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-center-block-start",
          "type": "value",
          "value": "center-block-start"
        },
        {
          "name": "center-block-end",
          "prose": "Two rows or columns, depending on which axis this keyword is specifying: the center row/column, and the row/column corresponding to the other half of the keyword as per the single-track keywords. (For example, center-top spans the first two rows—​the center row and the top row.)",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-center-block-end",
          "type": "value",
          "value": "center-block-end"
        },
        {
          "name": "center-inline-start",
          "prose": "Two rows or columns, depending on which axis this keyword is specifying: the center row/column, and the row/column corresponding to the other half of the keyword as per the single-track keywords. (For example, center-top spans the first two rows—​the center row and the top row.)",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-center-inline-start",
          "type": "value",
          "value": "center-inline-start"
        },
        {
          "name": "center-inline-end",
          "prose": "Two rows or columns, depending on which axis this keyword is specifying: the center row/column, and the row/column corresponding to the other half of the keyword as per the single-track keywords. (For example, center-top spans the first two rows—​the center row and the top row.)",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-center-inline-end",
          "type": "value",
          "value": "center-inline-end"
        },
        {
          "name": "all",
          "prose": "All three rows or columns, depending on which axis this keyword is specifying.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-inset-area-all",
          "type": "value",
          "value": "all"
        }
      ]
    },
    {
      "name": "anchor()",
      "prose": "An absolutely-positioned element can use the anchor() function as a value in its inset properties to refer to the position of one or more anchor elements. The anchor() function resolves to a <length>.",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#funcdef-anchor",
      "type": "function",
      "value": "anchor( <anchor-element>? <anchor-side>, <length-percentage>? )",
      "values": [
        {
          "name": "<dashed-ident>",
          "prose": "Specifies the anchor name it will look for. This name is a tree-scoped reference.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-dashed-ident",
          "type": "value",
          "value": "<dashed-ident>"
        },
        {
          "name": "implicit",
          "prose": "Selects the implicit anchor element defined for the element, if possible.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-implicit",
          "type": "value",
          "value": "implicit"
        },
        {
          "name": "inside",
          "prose": "Resolves to one of the anchor element’s sides, depending on which inset property it’s used in. inside refers to the same side as the inset property (attaching the element to the \"inside\" of the anchor), while outside refers to the opposite.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-inside",
          "type": "value",
          "value": "inside"
        },
        {
          "name": "outside",
          "prose": "Resolves to one of the anchor element’s sides, depending on which inset property it’s used in. inside refers to the same side as the inset property (attaching the element to the \"inside\" of the anchor), while outside refers to the opposite.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-outside",
          "type": "value",
          "value": "outside"
        },
        {
          "name": "top",
          "prose": "Refers to the specified side of the anchor element.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-top",
          "type": "value",
          "value": "top"
        },
        {
          "name": "right",
          "prose": "Refers to the specified side of the anchor element.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-right",
          "type": "value",
          "value": "right"
        },
        {
          "name": "bottom",
          "prose": "Refers to the specified side of the anchor element.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-bottom",
          "type": "value",
          "value": "bottom"
        },
        {
          "name": "left",
          "prose": "Refers to the specified side of the anchor element.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-left",
          "type": "value",
          "value": "left"
        },
        {
          "name": "start",
          "prose": "Refers to one of the sides of the anchor element in the same axis as the inset property it’s used in, by resolving the keyword against the writing mode of either the positioned element (for self-start and self-end) or the positioned element’s containing block (for start and end).",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-start",
          "type": "value",
          "value": "start"
        },
        {
          "name": "end",
          "prose": "Refers to one of the sides of the anchor element in the same axis as the inset property it’s used in, by resolving the keyword against the writing mode of either the positioned element (for self-start and self-end) or the positioned element’s containing block (for start and end).",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-end",
          "type": "value",
          "value": "end"
        },
        {
          "name": "self-start",
          "prose": "Refers to one of the sides of the anchor element in the same axis as the inset property it’s used in, by resolving the keyword against the writing mode of either the positioned element (for self-start and self-end) or the positioned element’s containing block (for start and end).",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-self-start",
          "type": "value",
          "value": "self-start"
        },
        {
          "name": "self-end",
          "prose": "Refers to one of the sides of the anchor element in the same axis as the inset property it’s used in, by resolving the keyword against the writing mode of either the positioned element (for self-start and self-end) or the positioned element’s containing block (for start and end).",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-self-end",
          "type": "value",
          "value": "self-end"
        },
        {
          "name": "<percentage>",
          "prose": "Refers to a position a corresponding percentage between the start and end sides, with 0% being equivalent to start and 100% being equivalent to end. center is equivalent to 50%.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-percentage",
          "type": "value",
          "value": "<percentage>"
        },
        {
          "name": "center",
          "prose": "Refers to a position a corresponding percentage between the start and end sides, with 0% being equivalent to start and 100% being equivalent to end. center is equivalent to 50%.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-center",
          "type": "value",
          "value": "center"
        }
      ]
    },
    {
      "name": "<anchor-element>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-anchor-element",
      "type": "type",
      "value": "<dashed-ident> | implicit"
    },
    {
      "name": "<anchor-side>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-anchor-side",
      "type": "type",
      "value": "inside | outside | top | left | right | bottom | start | end | self-start | self-end | <percentage> | center"
    },
    {
      "name": "anchor-size()",
      "prose": "An absolutely-positioned element can use the anchor-size() function in its sizing properties to refer to the size of one or more anchor elements. The anchor-size() function resolves to a <length>.",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#funcdef-anchor-size",
      "type": "function",
      "value": "anchor-size( <anchor-element>? <anchor-size>, <length-percentage>? )",
      "values": [
        {
          "name": "width",
          "prose": "The physical <anchor-size> keywords (width and height) refer to the width and height, respectively, of the target anchor element. Unlike anchor(), there is no restriction on having to match axises; for example, width: anchor-size(--foo height); is valid.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-size-width",
          "type": "value",
          "value": "width"
        },
        {
          "name": "height",
          "prose": "The physical <anchor-size> keywords (width and height) refer to the width and height, respectively, of the target anchor element. Unlike anchor(), there is no restriction on having to match axises; for example, width: anchor-size(--foo height); is valid.",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-size-height",
          "type": "value",
          "value": "height"
        },
        {
          "name": "block",
          "prose": "The logical <anchor-size> keywords (block, inline, self-block, and self-inline) map to one of the physical keywords according to either the writing mode of the element (for self-block and self-inline) or the writing mode of the element’s containing block (for block and inline).",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-size-block",
          "type": "value",
          "value": "block"
        },
        {
          "name": "inline",
          "prose": "The logical <anchor-size> keywords (block, inline, self-block, and self-inline) map to one of the physical keywords according to either the writing mode of the element (for self-block and self-inline) or the writing mode of the element’s containing block (for block and inline).",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-size-inline",
          "type": "value",
          "value": "inline"
        },
        {
          "name": "self-block",
          "prose": "The logical <anchor-size> keywords (block, inline, self-block, and self-inline) map to one of the physical keywords according to either the writing mode of the element (for self-block and self-inline) or the writing mode of the element’s containing block (for block and inline).",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-size-self-block",
          "type": "value",
          "value": "self-block"
        },
        {
          "name": "self-inline",
          "prose": "The logical <anchor-size> keywords (block, inline, self-block, and self-inline) map to one of the physical keywords according to either the writing mode of the element (for self-block and self-inline) or the writing mode of the element’s containing block (for block and inline).",
          "href": "https://drafts.csswg.org/css-anchor-position-1/#valdef-anchor-size-self-inline",
          "type": "value",
          "value": "self-inline"
        }
      ]
    },
    {
      "name": "<anchor-size>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-anchor-size",
      "type": "type",
      "value": "width | height | block | inline | self-block | self-inline"
    },
    {
      "name": "<try-size>",
      "href": "https://drafts.csswg.org/css-anchor-position-1/#typedef-try-size",
      "type": "type",
      "value": "most-width | most-height | most-block-size | most-inline-size"
    }
  ]
}
