{
  "spec": {
    "title": "CSS Flexible Box Layout Module Level 1",
    "url": "https://drafts.csswg.org/css-flexbox-1/"
  },
  "properties": [
    {
      "name": "flex-direction",
      "value": "row | row-reverse | column | column-reverse",
      "initial": "row",
      "appliesTo": "flex containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "values": [
        {
          "name": "row",
          "prose": "The flex container’s main axis has the same orientation as the inline axis of the current writing mode. The main-start and main-end directions are equivalent to the inline-start and inline-end directions, respectively, of the current writing mode.",
          "type": "value",
          "value": "row"
        },
        {
          "name": "row-reverse",
          "prose": "Same as row, except the main-start and main-end directions are swapped.",
          "type": "value",
          "value": "row-reverse"
        },
        {
          "name": "column",
          "prose": "The flex container’s main axis has the same orientation as the block axis of the current writing mode. The main-start and main-end directions are equivalent to the block-start and block-end directions, respectively, of the current writing mode.",
          "type": "value",
          "value": "column"
        },
        {
          "name": "column-reverse",
          "prose": "Same as column, except the main-start and main-end directions are swapped.",
          "type": "value",
          "value": "column-reverse"
        }
      ],
      "styleDeclaration": [
        "flex-direction",
        "flexDirection"
      ]
    },
    {
      "name": "flex-wrap",
      "value": "nowrap | wrap | wrap-reverse",
      "initial": "nowrap",
      "appliesTo": "flex containers",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete",
      "values": [
        {
          "name": "nowrap",
          "prose": "The flex container is single-line.",
          "type": "value",
          "value": "nowrap"
        },
        {
          "name": "wrap",
          "prose": "The flex container is multi-line.",
          "type": "value",
          "value": "wrap"
        },
        {
          "name": "wrap-reverse",
          "prose": "Same as wrap.",
          "type": "value",
          "value": "wrap-reverse"
        }
      ],
      "styleDeclaration": [
        "flex-wrap",
        "flexWrap"
      ]
    },
    {
      "name": "flex-flow",
      "value": "<'flex-direction'> || <'flex-wrap'>",
      "initial": "see individual properties",
      "appliesTo": "see individual properties",
      "inherited": "see individual properties",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar",
      "styleDeclaration": [
        "flex-flow",
        "flexFlow"
      ]
    },
    {
      "name": "flex",
      "value": "none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]",
      "initial": "0 1 auto",
      "appliesTo": "flex items",
      "inherited": "no",
      "percentages": "see individual properties",
      "computedValue": "see individual properties",
      "animationType": "by computed value type",
      "canonicalOrder": "per grammar",
      "values": [
        {
          "name": "<'flex-grow'>",
          "prose": "This <number [0,∞]> component sets flex-grow longhand and specifies the flex grow factor, which determines how much the flex item will grow relative to the rest of the flex items in the flex container when positive free space is distributed. When omitted, it is set to 1.",
          "type": "value",
          "value": "<'flex-grow'>"
        },
        {
          "name": "<'flex-shrink'>",
          "prose": "This <number [0,∞]> component sets flex-shrink longhand and specifies the flex shrink factor, which determines how much the flex item will shrink relative to the rest of the flex items in the flex container when negative free space is distributed. When omitted, it is set to 1.",
          "type": "value",
          "value": "<'flex-shrink'>"
        },
        {
          "name": "<'flex-basis'>",
          "prose": "This component sets the flex-basis longhand, which specifies the flex basis: the initial main size of the flex item, before free space is distributed according to the flex factors. <'flex-basis'> accepts the same values as the width and height properties (except that auto is treated differently) plus the content keyword: When omitted from the flex shorthand, its specified value is 0.",
          "type": "value",
          "value": "<'flex-basis'>"
        },
        {
          "name": "none",
          "prose": "The keyword none expands to 0 0 auto.",
          "type": "value",
          "value": "none"
        }
      ],
      "styleDeclaration": [
        "flex"
      ]
    },
    {
      "name": "flex-grow",
      "value": "<number [0,∞]>",
      "initial": "0",
      "appliesTo": "flex items",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified number",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "values": [
        {
          "name": "<number>",
          "prose": "The flex-grow property sets the flex grow factor to the provided <number>. Negative values are not allowed.",
          "type": "value",
          "value": "<number>"
        }
      ],
      "styleDeclaration": [
        "flex-grow",
        "flexGrow"
      ]
    },
    {
      "name": "flex-shrink",
      "value": "<number [0,∞]>",
      "initial": "1",
      "appliesTo": "flex items",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified value",
      "canonicalOrder": "per grammar",
      "animationType": "number",
      "values": [
        {
          "name": "<number>",
          "prose": "The flex-shrink property sets the flex shrink factor to the provided <number>. Negative values are not allowed.",
          "type": "value",
          "value": "<number>"
        }
      ],
      "styleDeclaration": [
        "flex-shrink",
        "flexShrink"
      ]
    },
    {
      "name": "flex-basis",
      "value": "content | <'width'>",
      "initial": "auto",
      "appliesTo": "flex items",
      "inherited": "no",
      "percentages": "relative to the flex container’s inner main size",
      "computedValue": "specified keyword or a computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value type",
      "values": [
        {
          "name": "auto",
          "prose": "When specified on a flex item, the auto keyword retrieves the value of the main size property as the used flex-basis. If that value is itself auto, then the used value is content.",
          "type": "value",
          "value": "auto"
        },
        {
          "name": "content",
          "prose": "Indicates an automatic size based on the flex item’s content. (This is typically equivalent to the max-content size, but with adjustments to handle preferred aspect ratios, intrinsic sizing constraints, and orthogonal flows; see details in § 9 Flex Layout Algorithm.)",
          "type": "value",
          "value": "content"
        }
      ],
      "styleDeclaration": [
        "flex-basis",
        "flexBasis"
      ]
    }
  ],
  "atrules": [],
  "selectors": [],
  "values": [],
  "warnings": [
    {
      "msg": "Dangling value",
      "name": "flex",
      "prose": "This value causes an element to generate a flex container box that is block-level when placed in flow layout.",
      "type": "value",
      "value": "flex",
      "for": "display"
    },
    {
      "msg": "Dangling value",
      "name": "inline-flex",
      "prose": "This value causes an element to generate a flex container box that is inline-level when placed in flow layout.",
      "type": "value",
      "value": "inline-flex",
      "for": "display"
    }
  ]
}
