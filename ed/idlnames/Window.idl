// Source: Compatibility Standard (https://compat.spec.whatwg.org/)
partial interface Window {
    readonly attribute short orientation;
    attribute EventHandler onorientationchange;
};

// Source: App History API (https://wicg.github.io/app-history/)
partial interface Window {
  readonly attribute AppHistory appHistory;
};

// Source: Attribution Reporting (https://wicg.github.io/conversion-measurement-api/)
[SecureContext]
partial interface Window {
  readonly attribute AttributionReporting attributionReporting;
};

// Source: Cookie Store API (https://wicg.github.io/cookie-store/)
[SecureContext]
partial interface Window {
  [SameObject] readonly attribute CookieStore cookieStore;
};

// Source: File System Access (https://wicg.github.io/file-system-access/)
[SecureContext]
partial interface Window {
    Promise<sequence<FileSystemFileHandle>> showOpenFilePicker(optional OpenFilePickerOptions options = {});
    Promise<FileSystemFileHandle> showSaveFilePicker(optional SaveFilePickerOptions options = {});
    Promise<FileSystemDirectoryHandle> showDirectoryPicker(optional DirectoryPickerOptions options = {});
};

// Source: Manifest Incubations (https://wicg.github.io/manifest-incubations/)
partial interface Window {
  attribute EventHandler onappinstalled;
  attribute EventHandler onbeforeinstallprompt;
};

// Source: Portals (https://wicg.github.io/portals/)
partial interface Window {
    readonly attribute PortalHost? portalHost;
};

// Source: Web Speech API (https://wicg.github.io/speech-api/)
partial interface Window {
    [SameObject] readonly attribute SpeechSynthesis speechSynthesis;
};

// Source: Visual Viewport API (https://wicg.github.io/visual-viewport/)
partial interface Window {
  [SameObject, Replaceable] readonly attribute VisualViewport visualViewport;
};

// Source: CSS Spatial Navigation Level 1 (https://www.w3.org/TR/css-nav-1/)
partial interface Window {
    undefined navigate(SpatialNavigationDirection dir);
};

// Source: CSS Object Model (CSSOM) (https://www.w3.org/TR/cssom-1/)
partial interface Window {
  [NewObject] CSSStyleDeclaration getComputedStyle(Element elt, optional CSSOMString? pseudoElt);
};

// Source: CSSOM View Module (https://www.w3.org/TR/cssom-view-1/)
partial interface Window {
    [NewObject] MediaQueryList matchMedia(CSSOMString query);
    [SameObject, Replaceable] readonly attribute Screen screen;

    // browsing context
    undefined moveTo(long x, long y);
    undefined moveBy(long x, long y);
    undefined resizeTo(long width, long height);
    undefined resizeBy(long x, long y);

    // viewport
    [Replaceable] readonly attribute long innerWidth;
    [Replaceable] readonly attribute long innerHeight;

    // viewport scrolling
    [Replaceable] readonly attribute double scrollX;
    [Replaceable] readonly attribute double pageXOffset;
    [Replaceable] readonly attribute double scrollY;
    [Replaceable] readonly attribute double pageYOffset;
    undefined scroll(optional ScrollToOptions options = {});
    undefined scroll(unrestricted double x, unrestricted double y);
    undefined scrollTo(optional ScrollToOptions options = {});
    undefined scrollTo(unrestricted double x, unrestricted double y);
    undefined scrollBy(optional ScrollToOptions options = {});
    undefined scrollBy(unrestricted double x, unrestricted double y);

    // client
    [Replaceable] readonly attribute long screenX;
    [Replaceable] readonly attribute long screenLeft;
    [Replaceable] readonly attribute long screenY;
    [Replaceable] readonly attribute long screenTop;
    [Replaceable] readonly attribute long outerWidth;
    [Replaceable] readonly attribute long outerHeight;
    [Replaceable] readonly attribute double devicePixelRatio;
};

// Source: DeviceOrientation Event Specification (https://www.w3.org/TR/orientation-event/)
partial interface Window {
    [SecureContext] attribute EventHandler ondeviceorientation;
};

// Source: DeviceOrientation Event Specification (https://www.w3.org/TR/orientation-event/)
partial interface Window {
    [SecureContext] attribute EventHandler ondeviceorientationabsolute;
};

// Source: DeviceOrientation Event Specification (https://www.w3.org/TR/orientation-event/)
partial interface Window {
    attribute EventHandler oncompassneedscalibration;
};

// Source: DeviceOrientation Event Specification (https://www.w3.org/TR/orientation-event/)
partial interface Window {
    [SecureContext] attribute EventHandler ondevicemotion;
};

// Source: Cooperative Scheduling of Background Tasks (https://www.w3.org/TR/requestidlecallback/)
partial interface Window {
  unsigned long requestIdleCallback(IdleRequestCallback callback, optional IdleRequestOptions options = {});
  undefined cancelIdleCallback(unsigned long handle);
};

// Source: Selection API (https://www.w3.org/TR/selection-api/)
partial interface Window {
  Selection? getSelection();
};