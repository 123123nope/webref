From e6dbbbb8be51eda460a4d9e362c57bc1749d3fef Mon Sep 17 00:00:00 2001
From: Francois Daoust <fd@tidoust.net>
Date: Mon, 29 Aug 2022 11:57:28 +0200
Subject: [PATCH] Add IDL patch for JSON-LD Framing API

See https://github.com/w3c/json-ld-framing/pull/135
---
 ed/idl/json-ld-framing.idl | 16 ++--------------
 1 file changed, 2 insertions(+), 14 deletions(-)

diff --git a/ed/idl/json-ld-framing.idl b/ed/idl/json-ld-framing.idl
index 597e5fe13..71459de9e 100644
--- a/ed/idl/json-ld-framing.idl
+++ b/ed/idl/json-ld-framing.idl
@@ -3,25 +3,14 @@
 // (https://github.com/w3c/webref)
 // Source: JSON-LD 1.1 Framing (https://w3c.github.io/json-ld-framing/)
 
-/*
- * The JsonLd interface is created to expose the JsonLdProcessor interface.
- */
-[Global=JsonLd, Exposed=JsonLd]
-interface JsonLd {};
-
 [Exposed=JsonLd]
-interface JsonLdProcessor {
-  constructor();
+partial interface JsonLdProcessor {
   static Promise<JsonLdRecord> frame(
     JsonLdInput input,
     JsonLdInput frame,
     optional JsonLdOptions options = {});
 };
 
-typedef record<USVString, any> JsonLdRecord;
-
-typedef (JsonLdRecord or sequence<JsonLdRecord> or USVString or RemoteDocument) JsonLdInput;
-
 dictionary JsonLdFramingError {
   JsonLdFramingErrorCode code;
   USVString? message = null;
@@ -31,14 +20,13 @@ enum JsonLdFramingErrorCode {
   "invalid @embed value"
 };
 
-dictionary JsonLdOptions {
+partial dictionary JsonLdOptions {
   (JsonLdEmbed or boolean)  embed         = "@once";
   boolean                   explicit      = false;
   boolean                   omitDefault   = false;
   boolean                   omitGraph;
   boolean                   requireAll    = false;
   boolean                   frameDefault  = false;
-  boolean                   ordered       = false;
 };
 
 enum JsonLdEmbed {
-- 
2.36.0.windows.1

